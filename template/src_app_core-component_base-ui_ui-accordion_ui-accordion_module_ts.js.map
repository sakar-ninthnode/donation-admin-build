{"version":3,"file":"src_app_core-component_base-ui_ui-accordion_ui-accordion_module_ts.js","mappings":"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","sources":["./src/app/core-component/base-ui/ui-accordion/ui-accordion-routing.module.ts","./src/app/core-component/base-ui/ui-accordion/ui-accordion.component.ts","./src/app/core-component/base-ui/ui-accordion/ui-accordion.component.html","./src/app/core-component/base-ui/ui-accordion/ui-accordion.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UiAccordionComponent } from './ui-accordion.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UiAccordionComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UiAccordionRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { routes } from 'src/app/core/helpers/routes';\r\n\r\n@Component({\r\n  selector: 'app-ui-accordion',\r\n  templateUrl: './ui-accordion.component.html',\r\n  styleUrl: './ui-accordion.component.scss'\r\n})\r\nexport class UiAccordionComponent {\r\n  public routes = routes;\r\n}\r\n","\r\n<div class=\"page-header\">\r\n    <div class=\"page-title\">\r\n        <h4>Accordion</h4>\r\n    </div>\r\n</div>\t\t\t\r\n\r\n<div class=\"row\">\r\n\r\n    <!-- Basic Accordion -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Basic Accordion\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion\" id=\"accordionExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use\r\n                                to\r\n                                style each element. These classes control the overall appearance, as\r\n                                well as\r\n                                the\r\n                                showing and hiding via CSS transitions. You can modify any of this with\r\n                                custom\r\n                                CSS or overriding our default variables. It's also worth noting that\r\n                                just\r\n                                about\r\n                                any HTML can go within the <code>.accordion-body</code>, though the\r\n                                transition\r\n                                does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden\r\n                                by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use\r\n                                to\r\n                                style each element. These classes control the overall appearance, as\r\n                                well as\r\n                                the\r\n                                showing and hiding via CSS transitions. You can modify any of this with\r\n                                custom\r\n                                CSS or overriding our default variables. It's also worth noting that\r\n                                just\r\n                                about\r\n                                any HTML can go within the <code>.accordion-body</code>, though the\r\n                                transition\r\n                                does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden\r\n                                by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use\r\n                                to\r\n                                style each element. These classes control the overall appearance, as\r\n                                well as\r\n                                the\r\n                                showing and hiding via CSS transitions. You can modify any of this with\r\n                                custom\r\n                                CSS or overriding our default variables. It's also worth noting that\r\n                                just\r\n                                about\r\n                                any HTML can go within the <code>.accordion-body</code>, though the\r\n                                transition\r\n                                does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Basic Accordion -->\r\n\r\n    <!-- Always Open Accordion -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Always Open Accordion\r\n                    <p class=\"text-muted subtitle fs-12 fw-normal\">Omit the <code>data-bs-parent</code>\r\n                        attribute on each\r\n                        <code>.accordion-collapse</code>\r\n                        to make accordion items stay open when another item is opened.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"panelsStayOpen-collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use\r\n                                to style each element. These classes control the overall appearance, as\r\n                                well\r\n                                as the showing and hiding via CSS transitions. It's also worth\r\n                                noting\r\n                                that just about any HTML can go within the <code>.accordion-body</code>,\r\n                                though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden\r\n                                by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use\r\n                                to style each element. These classes control the overall appearance, as\r\n                                well\r\n                                as the showing and hiding via CSS transitions. You can modify any of\r\n                                this\r\n                                with custom CSS or overriding our default variables. It's also worth\r\n                                noting\r\n                                that just about any HTML can go within the <code>.accordion-body</code>,\r\n                                though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"panelsStayOpen-headingThree\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden\r\n                                by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use\r\n                                to style each element. These classes control the overall appearance, as\r\n                                well\r\n                                as the showing and hiding via CSS transitions. You can modify any of\r\n                                this\r\n                                with custom CSS or overriding our default variables. It's also worth\r\n                                noting\r\n                                that just about any HTML can go within the <code>.accordion-body</code>,\r\n                                though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Always Open Accordion -->\r\n\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <!-- With Spacing -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    With Spacing\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordions-items-seperate\" id=\"accordionSpacingExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSpacingOne\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#SpacingOne\" aria-expanded=\"false\" aria-controls=\"SpacingOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"SpacingOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingSpacingOne\" data-bs-parent=\"#accordionSpacingExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSpacingTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#SpacingTwo\" aria-expanded=\"false\" aria-controls=\"SpacingTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"SpacingTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingSpacingTwo\" data-bs-parent=\"#accordionSpacingExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSpacingThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#SpacingThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"SpacingThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"SpacingThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSpacingThree\"\r\n                            data-bs-parent=\"#accordionSpacingExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /With Spacing -->\r\n\r\n    <!-- Flush Accordion -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Flush Accordion\r\n                    <p class=\"subtitle text-muted fs-12 fw-normal\">\r\n                        Add <code>.accordion-flush</code> to remove the default\r\n                        <code>background-color</code>,\r\n                        borders, and rounded corners.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body p-0\">\r\n                <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\"\r\n                                aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                            <div class=\"accordion-body\">Placeholder content for this accordion,\r\n                                which is\r\n                                intended to demonstrate the <code>.accordion-flush</code> class.\r\n                                This is\r\n                                the\r\n                                first item's accordion body.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n                            <div class=\"accordion-body\">Placeholder content for this accordion,\r\n                                which is\r\n                                intended to demonstrate the <code>.accordion-flush</code> class.\r\n                                This is\r\n                                the\r\n                                second item's accordion body. Let's imagine this being filled\r\n                                with\r\n                                some\r\n                                actual content.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"flush-headingThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"flush-headingThree\"\r\n                            data-bs-parent=\"#accordionFlushExample\">\r\n                            <div class=\"accordion-body\">Placeholder content for this accordion,\r\n                                which is\r\n                                intended to demonstrate the <code>.accordion-flush</code> class.\r\n                                This is\r\n                                the\r\n                                third item's accordion body. Nothing more exciting happening\r\n                                here in\r\n                                terms\r\n                                of content, but just filling up the space to make it look, at\r\n                                least\r\n                                at\r\n                                first\r\n                                glance, a bit more representative of how this would look in a\r\n                                real-world\r\n                                application.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Flush Accordion -->\r\n\r\n</div>\r\n\r\n<!-- Light Colors -->\r\n<h6 class=\"mb-3\">Light Colors:</h6>\r\n<div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Primary\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-primary\" id=\"accordionPrimaryExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingPrimaryOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapsePrimaryOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapsePrimaryOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsePrimaryOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingPrimaryOne\"\r\n                            data-bs-parent=\"#accordionPrimaryExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingPrimaryTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePrimaryTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsePrimaryTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsePrimaryTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingPrimaryTwo\"\r\n                            data-bs-parent=\"#accordionPrimaryExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingPrimaryThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePrimaryThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsePrimaryThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsePrimaryThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingPrimaryThree\"\r\n                            data-bs-parent=\"#accordionPrimaryExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Secondary\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-secondary\" id=\"accordionSecondaryExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSecondaryOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseSecondaryOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseSecondaryOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSecondaryOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingSecondaryOne\"\r\n                            data-bs-parent=\"#accordionSecondaryExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSecondaryTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSecondaryTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseSecondaryTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSecondaryTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSecondaryTwo\"\r\n                            data-bs-parent=\"#accordionSecondaryExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSecondaryThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSecondaryThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseSecondaryThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSecondaryThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSecondaryThree\"\r\n                            data-bs-parent=\"#accordionSecondaryExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Light Colors -->\r\n\r\n<!-- Solid Colors -->\r\n<h6 class=\"mb-3\">Solid Colors:</h6>\r\n<div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Primary\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-solid-primary\" id=\"accordionPrimarySolidExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingPrimarySolidOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapsePrimarySolidOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapsePrimarySolidOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsePrimarySolidOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingPrimarySolidOne\"\r\n                            data-bs-parent=\"#accordionPrimarySolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingPrimarySolidTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePrimarySolidTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsePrimarySolidTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsePrimarySolidTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingPrimarySolidTwo\"\r\n                            data-bs-parent=\"#accordionPrimarySolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingPrimarySolidThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePrimarySolidThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsePrimarySolidThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsePrimarySolidThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingPrimarySolidThree\"\r\n                            data-bs-parent=\"#accordionPrimarySolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Secondary\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-solid-secondary\" id=\"accordionSecondarySolidExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSecondarySolidOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseSecondarySolidOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseSecondarySolidOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSecondarySolidOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingSecondarySolidOne\"\r\n                            data-bs-parent=\"#accordionSecondarySolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSecondarySolidTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSecondarySolidTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseSecondarySolidTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSecondarySolidTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSecondarySolidTwo\"\r\n                            data-bs-parent=\"#accordionSecondarySolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSecondarySolidThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSecondarySolidThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseSecondarySolidThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSecondarySolidThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSecondarySolidThree\"\r\n                            data-bs-parent=\"#accordionSecondarySolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Warning\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-solid-warning\" id=\"accordionWarningSolidExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingWarningSolidOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseWarningSolidOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseWarningSolidOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseWarningSolidOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingWarningSolidOne\"\r\n                            data-bs-parent=\"#accordionWarningSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingWarningSolidTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseWarningSolidTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseWarningSolidTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseWarningSolidTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingWarningSolidTwo\"\r\n                            data-bs-parent=\"#accordionWarningSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingWarningSolidThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseWarningSolidThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseWarningSolidThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseWarningSolidThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingWarningSolidThree\"\r\n                            data-bs-parent=\"#accordionWarningSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Info\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-solid-info\" id=\"accordionInfoSolidExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingInfoSolidOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseInfoSolidOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseInfoSolidOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseInfoSolidOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingInfoSolidOne\"\r\n                            data-bs-parent=\"#accordionInfoSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingInfoSolidTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseInfoSolidTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseInfoSolidTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseInfoSolidTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingInfoSolidTwo\"\r\n                            data-bs-parent=\"#accordionInfoSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingInfoSolidThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseInfoSolidThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseInfoSolidThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseInfoSolidThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingInfoSolidThree\"\r\n                            data-bs-parent=\"#accordionInfoSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Success\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-solid-success\" id=\"accordionSuccessSolidExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSuccessSolidOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseSuccessSolidOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseSuccessSolidOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSuccessSolidOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingSuccessSolidOne\"\r\n                            data-bs-parent=\"#accordionSuccessSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSuccessSolidTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSuccessSolidTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseSuccessSolidTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSuccessSolidTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSuccessSolidTwo\"\r\n                            data-bs-parent=\"#accordionSuccessSolidTwo\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingSuccessSolidThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSuccessSolidThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseSuccessSolidThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseSuccessSolidThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingSuccessSolidThree\"\r\n                            data-bs-parent=\"#accordionSuccessSolidThree\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Danger\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-solid-danger\" id=\"accordionDangerSolidExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingDangerSolidOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseDangerSolidOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseDangerSolidOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseDangerSolidOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingDangerSolidOne\"\r\n                            data-bs-parent=\"#accordionDangerSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingDangerSolidTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDangerSolidTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseDangerSolidTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseDangerSolidTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingDangerSolidTwo\"\r\n                            data-bs-parent=\"#accordionDangerSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingDangerSolidThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDangerSolidThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseDangerSolidThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseDangerSolidThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingDangerSolidThree\"\r\n                            data-bs-parent=\"#accordionDangerSolidExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Solid Colors -->\r\n\r\n<!-- Colored Borders -->\r\n<h6 class=\"mb-3\">Colored Borders:</h6>\r\n<div class=\"row\">\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Primary\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-border-primary accordions-items-seperate\"\r\n                    id=\"accordionprimaryborderExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderprimaryOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#primaryBorderOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"primaryBorderOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"primaryBorderOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingborderprimaryOne\"\r\n                            data-bs-parent=\"#accordionprimaryborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderprimaryTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#primaryBorderTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"primaryBorderTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"primaryBorderTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderprimaryTwo\"\r\n                            data-bs-parent=\"#accordionprimaryborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderprimaryThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#primaryBorderThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"primaryBorderThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"primaryBorderThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderprimaryThree\"\r\n                            data-bs-parent=\"#accordionprimaryborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Secondary\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-border-secondary accordions-items-seperate\"\r\n                    id=\"accordioninfoborderExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderinfoOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#infoBorderOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"infoBorderOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"infoBorderOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingborderinfoOne\"\r\n                            data-bs-parent=\"#accordioninfoborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderinfoTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#infoBorderTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"infoBorderTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"infoBorderTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderinfoTwo\"\r\n                            data-bs-parent=\"#accordioninfoborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderinfoThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#infoBorderThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"infoBorderThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"infoBorderThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderinfoThree\"\r\n                            data-bs-parent=\"#accordioninfoborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Success\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-border-success accordions-items-seperate\"\r\n                    id=\"accordionsuccessborderExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingbordersuccessOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#successBorderOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"successBorderOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"successBorderOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingbordersuccessOne\"\r\n                            data-bs-parent=\"#accordionsuccessborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingbordersuccessTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#successBorderTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"successBorderTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"successBorderTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingbordersuccessTwo\"\r\n                            data-bs-parent=\"#accordionsuccessborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingbordersuccessThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#successBorderThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"successBorderThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"successBorderThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingbordersuccessThree\"\r\n                            data-bs-parent=\"#accordionsuccessborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Info\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-border-info accordions-items-seperate\"\r\n                    id=\"accordioninfoborderExampleTwo\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderinfoTwos\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#infoBorderOnes\" aria-expanded=\"true\"\r\n                                aria-controls=\"infoBorderOnes\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"infoBorderOnes\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingborderinfoTwos\"\r\n                            data-bs-parent=\"#accordioninfoborderExampleTwo\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderinfoTwoo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#infoBorderTwos\"\r\n                                aria-expanded=\"false\" aria-controls=\"infoBorderTwos\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"infoBorderTwos\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderinfoTwoo\"\r\n                            data-bs-parent=\"#accordioninfoborderExample2\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderinfoThrees\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#infoBorderThrees\"\r\n                                aria-expanded=\"false\" aria-controls=\"infoBorderThrees\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"infoBorderThrees\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderinfoThrees\"\r\n                            data-bs-parent=\"#accordioninfoborderExample2\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Warning\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-border-warning accordions-items-seperate\"\r\n                    id=\"accordionwarningborderExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderwarningOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#warningBorderOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"warningBorderOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"warningBorderOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingborderwarningOne\"\r\n                            data-bs-parent=\"#accordionwarningborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderwarningTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#warningBorderTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"warningBorderTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"warningBorderTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderwarningTwo\"\r\n                            data-bs-parent=\"#accordionwarningborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderwarningThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#warningBorderThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"warningBorderThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"warningBorderThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderwarningThree\"\r\n                            data-bs-parent=\"#accordionwarningborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Danger\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-border-danger accordions-items-seperate\"\r\n                    id=\"accordiondangerborderExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderdangerOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#dangerBorderOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"dangerBorderOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"dangerBorderOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingborderdangerOne\"\r\n                            data-bs-parent=\"#accordiondangerborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderdangerTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#dangerBorderTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"dangerBorderTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"dangerBorderTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderdangerTwo\"\r\n                            data-bs-parent=\"#accordiondangerborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingborderdangerThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#dangerBorderThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"dangerBorderThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"dangerBorderThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingborderdangerThree\"\r\n                            data-bs-parent=\"#accordiondangerborderExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Colored Borders -->\r\n\r\n<div class=\"row\">\r\n\r\n    <!-- Left Aligned Icons -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Left Aligned Icons\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordionicon-left accordions-items-seperate\"\r\n                    id=\"accordioniconLeftExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingleftOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseleftOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapseleftOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseleftOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingleftOne\" data-bs-parent=\"#accordioniconLeftExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingleftTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseLeftTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseLeftTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseLeftTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingleftTwo\" data-bs-parent=\"#accordioniconLeftExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden\r\n                                by default, until the collapse plugin adds the appropriate classes that\r\n                                we use to style each element. These classes control the overall\r\n                                appearance, as well as the showing and hiding via CSS transitions. You\r\n                                can modify any of this with custom CSS or overriding our default\r\n                                variables. It's also worth noting that just about any HTML can go within\r\n                                the <code>.accordion-body</code>, though the transition does limit\r\n                                overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingleftThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapseLeftThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapseLeftThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseLeftThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingleftThree\"\r\n                            data-bs-parent=\"#accordioniconLeftExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden\r\n                                by default, until the collapse plugin adds the appropriate classes that\r\n                                we use to style each element. These classes control the overall\r\n                                appearance, as well as the showing and hiding via CSS transitions. You\r\n                                can modify any of this with custom CSS or overriding our default\r\n                                variables. It's also worth noting that just about any HTML can go within\r\n                                the <code>.accordion-body</code>, though the transition does limit\r\n                                overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Left Aligned Icons -->\r\n\r\n    <!-- Without Icon -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Without Icon\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordionicon-none accordions-items-seperate\"\r\n                    id=\"accordioniconnoIconExample\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingnoIconOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapsenoIconOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapsenoIconOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsenoIconOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingnoIconOne\"\r\n                            data-bs-parent=\"#accordioniconnoIconExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingnoIconTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsenoIconTwo\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsenoIconTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsenoIconTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingnoIconTwo\"\r\n                            data-bs-parent=\"#accordioniconnoIconExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden\r\n                                by default, until the collapse plugin adds the appropriate classes that\r\n                                we use to style each element. These classes control the overall\r\n                                appearance, as well as the showing and hiding via CSS transitions. You\r\n                                can modify any of this with custom CSS or overriding our default\r\n                                variables. It's also worth noting that just about any HTML can go within\r\n                                the <code>.accordion-body</code>, though the transition does limit\r\n                                overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingnoIconThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsenoIconThree\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsenoIconThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsenoIconThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingnoIconThree\"\r\n                            data-bs-parent=\"#accordioniconnoIconExample\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden\r\n                                by default, until the collapse plugin adds the appropriate classes that\r\n                                we use to style each element. These classes control the overall\r\n                                appearance, as well as the showing and hiding via CSS transitions. You\r\n                                can modify any of this with custom CSS or overriding our default\r\n                                variables. It's also worth noting that just about any HTML can go within\r\n                                the <code>.accordion-body</code>, though the transition does limit\r\n                                overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Without Icon -->\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <!-- Custom Icon Accordion -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Custom Icon Accordion\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion accordion-customicon1 accordions-items-seperate\" id=\"accordioncustomicon1Example\">\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingcustomicon1One\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapsecustomicon1One\" aria-expanded=\"true\"\r\n                                aria-controls=\"collapsecustomicon1One\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsecustomicon1One\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingcustomicon1One\"\r\n                            data-bs-parent=\"#accordioncustomicon1Example\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingcustomicon1Two\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsecustomicon1Two\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsecustomicon1Two\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsecustomicon1Two\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingcustomicon1Two\"\r\n                            data-bs-parent=\"#accordioncustomicon1Example\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingcustomicon1Three\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\"\r\n                                data-bs-toggle=\"collapse\" data-bs-target=\"#collapsecustomicon1Three\"\r\n                                aria-expanded=\"false\" aria-controls=\"collapsecustomicon1Three\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapsecustomicon1Three\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingcustomicon1Three\"\r\n                            data-bs-parent=\"#accordioncustomicon1Example\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Custom Icon Accordion -->\r\n\r\n    <!-- Custom Accordion -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Custom Accordion\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"accordion customized-accordion accordions-items-seperate\" id=\"customizedAccordion\">\r\n                    <div class=\"accordion-item custom-accordion-primary\">\r\n                        <h2 class=\"accordion-header\" id=\"customizedAccordionOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#customized-AccordionOne\" aria-expanded=\"true\"\r\n                                aria-controls=\"customized-AccordionOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"customized-AccordionOne\" class=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"customizedAccordionOne\" data-bs-parent=\"#customizedAccordion\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item custom-accordion-secondary\">\r\n                        <h2 class=\"accordion-header\" id=\"customizedAccordionTwo\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#customized-AccordionTwo\" aria-expanded=\"false\"\r\n                                aria-controls=\"customized-AccordionTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"customized-AccordionTwo\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"customizedAccordionTwo\" data-bs-parent=\"#customizedAccordion\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-item custom-accordion-danger\">\r\n                        <h2 class=\"accordion-header\" id=\"customizedAccordionThree\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#customized-AccordionThree\" aria-expanded=\"false\"\r\n                                aria-controls=\"customized-AccordionThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"customized-AccordionThree\" class=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"customizedAccordionThree\" data-bs-parent=\"#customizedAccordion\">\r\n                            <div class=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by\r\n                                default, until the collapse plugin adds the appropriate classes that we\r\n                                use to style each element. These classes control the overall appearance,\r\n                                as well as the showing and hiding via CSS transitions. You can modify\r\n                                any of this with custom CSS or overriding our default variables. It's\r\n                                also worth noting that just about any HTML can go within the\r\n                                <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Custom Accordion -->\r\n\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <!-- Example -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Example\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p class=\"mb-0\">\r\n                    <a class=\"btn btn-primary collapsed mb-2 me-1\" data-bs-toggle=\"collapse\"\r\n                        href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\"\r\n                        aria-controls=\"collapseExample\">\r\n                        Link with href\r\n                    </a>\r\n                    <button class=\"btn btn-secondary collapsed mb-2 me-1\" type=\"button\"\r\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\"\r\n                        aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                        Button with data-bs-target\r\n                    </button>\r\n                </p>\r\n                <div class=\"collapse\" id=\"collapseExample\">\r\n                    <div class=\"card card-body mb-0\">\r\n                        Some placeholder content for the collapse component. This panel\r\n                        is\r\n                        hidden by default but revealed when the user activates the\r\n                        relevant\r\n                        trigger.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Example -->\r\n\r\n    <!-- Targets Collapse -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">\r\n                    Targets Collapse\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p class=\"mb-0\">\r\n                    <a class=\"btn btn-primary mb-2 me-2\" data-bs-toggle=\"collapse\"\r\n                        href=\"#multiCollapseExample1\" role=\"button\" aria-expanded=\"false\"\r\n                        aria-controls=\"multiCollapseExample1\">Toggle first element</a>\r\n                    <button class=\"btn btn-success mb-2\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#multiCollapseExample2\" aria-expanded=\"false\"\r\n                        aria-controls=\"multiCollapseExample2\">Toggle second\r\n                        element</button>\r\n                    <button class=\"btn btn-danger mb-2\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\".multi-collapse\" aria-expanded=\"false\"\r\n                        aria-controls=\"multiCollapseExample1 multiCollapseExample2\">Toggle\r\n                        both elements</button>\r\n                </p>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div class=\"collapse multi-collapse\" id=\"multiCollapseExample1\">\r\n                            <div class=\"card card-body mb-0\">\r\n                                Some placeholder content for the first collapse\r\n                                component of\r\n                                this multi-collapse example. This panel is hidden by\r\n                                default\r\n                                but revealed when the user activates the relevant\r\n                                trigger.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"collapse multi-collapse\" id=\"multiCollapseExample2\">\r\n                            <div class=\"card card-body mb-0\">\r\n                                Some placeholder content for the second collapse\r\n                                component\r\n                                of this multi-collapse example. This panel is hidden by\r\n                                default but revealed when the user activates the\r\n                                relevant\r\n                                trigger.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Targets Collapse -->\r\n\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <!-- Horizontal Collapse -->\r\n    <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header justify-content-between\">\r\n                <div class=\"card-title\">Horizontal Collapse</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p>\r\n                    <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#collapseWidthExample\" aria-expanded=\"false\"\r\n                        aria-controls=\"collapseWidthExample\">\r\n                        Toggle width collapse\r\n                    </button>\r\n                </p>\r\n                <div>\r\n                    <div class=\"collapse collapse-horizontal\" id=\"collapseWidthExample\">\r\n                        <div class=\"card card-body\" style=\"width: 230px;\">\r\n                            This is some placeholder content for a horizontal collapse. It's\r\n                            hidden\r\n                            by default and shown when triggered.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Horizontal Collapse -->\r\n\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UiAccordionRoutingModule } from './ui-accordion-routing.module';\r\nimport { UiAccordionComponent } from './ui-accordion.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UiAccordionComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UiAccordionRoutingModule\r\n  ]\r\n})\r\nexport class UiAccordionModule { }\r\n"],"names":["RouterModule","UiAccordionComponent","routes","path","component","UiAccordionRoutingModule","forChild","imports","i1","exports","constructor","selectors","decls","vars","consts","template","UiAccordionComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CommonModule","UiAccordionModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}